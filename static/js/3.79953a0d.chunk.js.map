{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","DialogItem","path","id","className","classes","dialog","active","src","img","avatar","alt","userName","name","Message","message","userId","leftaling","rightaling","messageAv","maxLength50","maxLengthCreator","AddNewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItems","value","addMessage","addNewMessage","compose","dialogsPage","dispatch","addMessageActionCreator"],"mappings":"2LASMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAASD,EAAME,KAAKD,SAIrB,SAASE,EAAoBC,GAUhC,OADqCC,YAAQN,EAARM,EAPX,SAACC,GAAgC,IAClDL,EAAwBK,EAAxBL,OAAWM,EADsC,YACzBD,EADyB,YAEtD,OAAKL,EAEE,cAACG,EAAD,eAAeG,IAFF,cAAC,IAAD,CAAUC,GAAI,gB,oBClB1CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,oBCA7KD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2BAA2B,SAAW,+B,oBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,WAAa,4BAA4B,UAAY,2BAA2B,SAAW,4B,+GCiBxKC,EAb0B,SAACL,GAEtC,IAAIM,EAAI,mBAAeN,EAAMO,IAC7B,OAEI,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACI,qBAAKC,IAAKZ,EAAMa,IAAKL,UAAWC,IAAQK,OAAQC,IAAI,WACpD,cAAC,IAAD,CAASb,GAAII,EAAME,UAAWC,IAAQO,SAAtC,SAAiDhB,EAAMiB,W,kBCEpDC,EAVyB,SAAClB,GACrC,OAEI,sBAAKQ,UAAWC,IAAQU,QAAU,KAAyB,IAAjBnB,EAAMoB,OAAgBX,IAAQY,UAAYZ,IAAQa,YAA5F,UACI,qBAAKV,IAAKZ,EAAMc,OAAQN,UAAWC,IAAQc,UAAWR,IAAI,WAC1D,sBAAKP,UAAWC,IAAQO,SAAxB,cAAoChB,EAAMmB,QAA1C,W,kCCoDNK,EAAcC,YAAiB,IAmBxBC,EAAyBC,YAAwB,CAC1DC,KAAM,iBAD4BD,EAjBZ,SAAC3B,GACvB,OACI,uBAAM6B,SAAU7B,EAAM8B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOd,KAAM,gBACNe,UAAWC,IACXC,YAAY,yBACZC,SAAU,CAACC,IAAUZ,OAGhC,8BACI,+DAUDa,EA/DC,SAACrC,GAEb,IAIIsC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CACwBxB,KAAMwB,EAAExB,KACRV,GAAIkC,EAAElC,GACNM,IAAK4B,EAAE5B,KAHd4B,EAAElC,OAI5DmC,EAAmB1C,EAAM2C,SACxBH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CACSzB,QAASyB,EAAEzB,QACXZ,GAAIqC,EAAErC,GACNa,OAAQwB,EAAExB,OACVN,OAAQ8B,EAAE9B,QAJL8B,EAAErC,OAU9B,OACI,sBAAKC,UAAWC,IAAQ8B,QAAxB,UACI,qBAAK/B,UAAWC,IAAQoC,YAAxB,SACKP,IAEL,qBAAK9B,UAAWC,IAAQkC,SAAxB,SACKD,IAEL,8BACI,cAAChB,EAAD,CAAwBG,SA5BnB,SAACiB,GACd9C,EAAM+C,WAAWD,EAAME,wB,yBCDhBC,sBACXlD,aAhBoB,SAACL,GACrB,MAAO,CACH6C,QAAS7C,EAAMwD,YAAYX,QAC3BI,SAAUjD,EAAMwD,YAAYP,aAIT,SAACQ,GACxB,MAAO,CACHJ,WAAY,SAACD,GACTK,EAASC,YAAwBN,SAOzCjD,IAFWoD,CAGbZ","file":"static/js/3.79953a0d.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {StoreType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: StoreType): mapStateToPropsType => {\n    return {\n        isAuth : state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n\n    const RedirectComponent = (props: mapStateToPropsType) => {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n\n        return <Component {...restProps as T} />\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n    return ConnectedAuthRedirectComponent\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"avatar\":\"DialogItem_avatar__12OzI\",\"userName\":\"DialogItem_userName__2bG4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"leftaling\":\"Message_leftaling__2uzk7\",\"rightaling\":\"Message_rightaling__2_fi9\",\"messageAv\":\"Message_messageAv__b86z7\",\"userName\":\"Message_userName__3djD8\"};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './DialogItem.module.css'\nimport {DialogsType} from \"../../../redux/dialogs-reducer\";\n\nconst DialogItem: React.FC<DialogsType> =(props) => {\n\n    let path = `/dialogs/${props.id}`;\n    return (\n\n        <div className={classes.dialog + ' ' + classes.active}>\n            <img src={props.img} className={classes.avatar} alt=\"avatar\"/>\n            <NavLink to={path} className={classes.userName}>{props.name}</NavLink>\n        </div>\n\n    );\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport classes from \"./Message.module.css\"\nimport {MessagesType} from \"../../../redux/dialogs-reducer\";\n\nconst Message: React.FC<MessagesType> = (props) => {\n    return (\n\n        <div className={classes.message + ' ' + ((props.userId === 1) ? classes.leftaling : classes.rightaling)}>\n            <img src={props.avatar} className={classes.messageAv} alt=\"avatar\"/>\n            <div className={classes.userName}> {props.message} </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react';\nimport classes from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {DialogsType, MessagesType} from \"../../redux/dialogs-reducer\";\nimport {InjectedFormProps} from \"redux-form/lib/reduxForm\";\nimport {Field, reduxForm } from 'redux-form';\nimport {TextArea} from \"../common/FormsControl/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\ntype LocalDialogsType = {\n    dialogs: Array<DialogsType>\n    messages: Array<MessagesType>\n    textMessage: string | undefined\n    isAuth: boolean\n    changeInputValue: (value: string ) => void\n    addMessage: (value: any) => void\n}\n\n\nconst Dialogs = (props: LocalDialogsType) => {\n\n    let addMessage = (value: any) => {\n        props.addMessage(value.addNewMessage)\n    }\n\n    let dialogsElements = props.dialogs.map(d => <DialogItem key={d.id}\n                                                                         name={d.name}\n                                                                         id={d.id}\n                                                                         img={d.img}/>)\n    let messagesElements = props.messages\n        .map(m => <Message key={m.id}\n                           message={m.message}\n                           id={m.id}\n                           userId={m.userId}\n                           avatar={m.avatar}\n\n        />)\n\n    // if (!props.isAuth) return <Redirect to={'/login'}/>\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n            </div>\n            <div>\n                <AddNewMessageReduxForm onSubmit={addMessage}/>\n            </div>\n        </div>\n    );\n}\n\ntype FormDataType = {\n\n}\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddNewMessageForm = (props: InjectedFormProps<FormDataType>) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={\"addNewMessage\"}\n                       component={TextArea}\n                       placeholder=\"Type your message here\"\n                       validate={[required, maxLength50]}\n                />\n            </div>\n            <div>\n                <button>Send your message</button>\n            </div>\n        </form>\n    )\n}\n\nexport const AddNewMessageReduxForm = reduxForm<FormDataType>({\n    form: \"addNewMessage\"\n})(AddNewMessageForm)\n\nexport default Dialogs;\n","import React from 'react';\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {DispatchType, StoreType} from \"../../redux/redux-store\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = (state: StoreType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: DispatchType) => {\n    return {\n        addMessage: (value: string) => {\n            dispatch(addMessageActionCreator(value))\n        }\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}